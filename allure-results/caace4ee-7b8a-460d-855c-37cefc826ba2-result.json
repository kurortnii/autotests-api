{"name": "Create user", "status": "broken", "statusDetails": {"message": "httpx.RemoteProtocolError: Server disconnected without sending a response.", "trace": "@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n>           yield\n\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:250: in handle_request\n    resp = self._pool.handle_request(req)\n.venv/lib/python3.12/site-packages/httpcore/_sync/connection_pool.py:256: in handle_request\n    raise exc from None\n.venv/lib/python3.12/site-packages/httpcore/_sync/connection_pool.py:236: in handle_request\n    response = connection.handle_request(\n.venv/lib/python3.12/site-packages/httpcore/_sync/http_proxy.py:206: in handle_request\n    return self._connection.handle_request(proxy_request)\n.venv/lib/python3.12/site-packages/httpcore/_sync/connection.py:103: in handle_request\n    return self._connection.handle_request(request)\n.venv/lib/python3.12/site-packages/httpcore/_sync/http11.py:136: in handle_request\n    raise exc\n.venv/lib/python3.12/site-packages/httpcore/_sync/http11.py:106: in handle_request\n    ) = self._receive_response_headers(**kwargs)\n.venv/lib/python3.12/site-packages/httpcore/_sync/http11.py:177: in _receive_response_headers\n    event = self._receive_event(timeout=timeout)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <HTTP11Connection ['http://127.0.0.1:9090', CLOSED, Request Count: 1]>\ntimeout = 100\n\n    def _receive_event(\n        self, timeout: float | None = None\n    ) -> h11.Event | type[h11.PAUSED]:\n        while True:\n            with map_exceptions({h11.RemoteProtocolError: RemoteProtocolError}):\n                event = self._h11_state.next_event()\n    \n            if event is h11.NEED_DATA:\n                data = self._network_stream.read(\n                    self.READ_NUM_BYTES, timeout=timeout\n                )\n    \n                # If we feed this case through h11 we'll raise an exception like:\n                #\n                #     httpcore.RemoteProtocolError: can't handle event type\n                #     ConnectionClosed when role=SERVER and state=SEND_RESPONSE\n                #\n                # Which is accurate, but not very informative from an end-user\n                # perspective. Instead we handle this case distinctly and treat\n                # it as a ConnectError.\n                if data == b\"\" and self._h11_state.their_state == h11.SEND_RESPONSE:\n                    msg = \"Server disconnected without sending a response.\"\n>                   raise RemoteProtocolError(msg)\nE                   httpcore.RemoteProtocolError: Server disconnected without sending a response.\n\n.venv/lib/python3.12/site-packages/httpcore/_sync/http11.py:231: RemoteProtocolError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.users.test_users.TestUsers object at 0x107d06ff0>, email = 'gmail.com'\npublic_users_client = <clients.users.public_users_client.PublicUsersClient object at 0x107ef0e00>\n\n    @pytest.mark.parametrize(\"email\",\n                             emails.keys(),\n                             ids=lambda email: f\"{email}: {emails[email]}\")\n    @allure.title(\"Create user\")\n    @allure.tag(AllureTags.CREATE_ENTITY)\n    @allure.story(AllureStory.CREATE_ENTITY)\n    @allure.severity(Severity.BLOCKER)\n    @allure.sub_suite(AllureStory.CREATE_ENTITY)\n    def test_create_user(self, email: str, public_users_client: PublicUsersClient):\n        # формируем тело запроса на создание пользователя\n        request = CreateUserRequestSchema(email=fake.email(email))\n        # отправляем запрос на создание пользователя\n>       response = public_users_client.create_user_api(request)\n\ntests/users/test_users.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nclients/users/public_users_client.py:21: in create_user_api\n    return self.post(\"/api/v1/users\", json=request.model_dump(by_alias=True))\nclients/api_client.py:44: in post\n    return self.client.post(url, json=json, data=data, files=files)\n.venv/lib/python3.12/site-packages/httpx/_client.py:1144: in post\n    return self.request(\n.venv/lib/python3.12/site-packages/httpx/_client.py:825: in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n.venv/lib/python3.12/site-packages/httpx/_client.py:914: in send\n    response = self._send_handling_auth(\n.venv/lib/python3.12/site-packages/httpx/_client.py:942: in _send_handling_auth\n    response = self._send_handling_redirects(\n.venv/lib/python3.12/site-packages/httpx/_client.py:979: in _send_handling_redirects\n    response = self._send_single_request(request)\n.venv/lib/python3.12/site-packages/httpx/_client.py:1014: in _send_single_request\n    response = transport.handle_request(request)\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:249: in handle_request\n    with map_httpcore_exceptions():\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py:158: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.RemoteProtocolError: Server disconnected without sending a response.\n\n.venv/lib/python3.12/site-packages/httpx/_transports/default.py:118: RemoteProtocolError"}, "steps": [{"name": "Create user", "status": "broken", "statusDetails": {"message": "httpx.RemoteProtocolError: Server disconnected without sending a response.\n", "trace": "  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/clients/users/public_users_client.py\", line 21, in create_user_api\n    return self.post(\"/api/v1/users\", json=request.model_dump(by_alias=True))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/clients/api_client.py\", line 44, in post\n    return self.client.post(url, json=json, data=data, files=files)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_client.py\", line 1144, in post\n    return self.request(\n           ^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_client.py\", line 825, in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_client.py\", line 914, in send\n    response = self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_client.py\", line 942, in _send_handling_auth\n    response = self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_client.py\", line 979, in _send_handling_redirects\n    response = self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_client.py\", line 1014, in _send_single_request\n    response = transport.handle_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_transports/default.py\", line 249, in handle_request\n    with map_httpcore_exceptions():\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py\", line 158, in __exit__\n    self.gen.throw(value)\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_transports/default.py\", line 118, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\n"}, "steps": [{"name": "Make POST request to '/api/v1/users'", "status": "broken", "statusDetails": {"message": "httpx.RemoteProtocolError: Server disconnected without sending a response.\n", "trace": "  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/clients/api_client.py\", line 44, in post\n    return self.client.post(url, json=json, data=data, files=files)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_client.py\", line 1144, in post\n    return self.request(\n           ^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_client.py\", line 825, in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_client.py\", line 914, in send\n    response = self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_client.py\", line 942, in _send_handling_auth\n    response = self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_client.py\", line 979, in _send_handling_redirects\n    response = self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_client.py\", line 1014, in _send_single_request\n    response = transport.handle_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_transports/default.py\", line 249, in handle_request\n    with map_httpcore_exceptions():\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py\", line 158, in __exit__\n    self.gen.throw(value)\n  File \"/Users/macbookrik/PycharmProjects/autotests-api/.venv/lib/python3.12/site-packages/httpx/_transports/default.py\", line 118, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\n"}, "parameters": [{"name": "url", "value": "'/api/v1/users'"}, {"name": "json", "value": "{'email': 'shelby34@gmail.com', 'password': '5+7U91El(u', 'lastName': 'Diaz', 'firstName': 'Katie', 'middleName': 'Jennifer'}"}, {"name": "data", "value": "None"}, {"name": "files", "value": "None"}], "start": 1751277100718, "stop": 1751277100722}], "parameters": [{"name": "request", "value": "CreateUserRequestSchema(email='shelby34@gmail.com', password='5+7U91El(u', last_name='Diaz', first_name='Katie', middle_name='Jennifer')"}], "start": 1751277100718, "stop": 1751277100723}], "parameters": [{"name": "email", "value": "'gmail.com'"}], "start": 1751277100718, "stop": 1751277100723, "uuid": "c4c8ca96-07fd-4e17-ba7f-f313ef0fcd23", "historyId": "77458887fc7a022f504c8cd89823d38e", "testCaseId": "0f342f12f889b3471502fbe48e8f59c2", "fullName": "tests.users.test_users.TestUsers#test_create_user", "labels": [{"name": "subSuite", "value": "Create entity"}, {"name": "epic", "value": "LMS service"}, {"name": "tag", "value": "CREATE_ENTITY"}, {"name": "suite", "value": "Users"}, {"name": "story", "value": "Create entity"}, {"name": "tag", "value": "USERS"}, {"name": "feature", "value": "Users"}, {"name": "tag", "value": "REGRESSION"}, {"name": "severity", "value": "blocker"}, {"name": "parentSuite", "value": "LMS service"}, {"name": "tag", "value": "users"}, {"name": "tag", "value": "regression"}, {"name": "host", "value": "MacBook-Air-Rik.local"}, {"name": "thread", "value": "11098-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.users.test_users"}]}