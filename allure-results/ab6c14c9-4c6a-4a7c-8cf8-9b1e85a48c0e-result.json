{"name": "Get user me", "status": "broken", "statusDetails": {"message": "TypeError: sequence item 3: expected str instance, list found", "trace": "self = <allure_commons._allure.fixture object at 0x105f61df0>, args = (), kwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n.venv/lib/python3.12/site-packages/allure_commons/_allure.py:231: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nfixtures/allure.py:12: in save_allure_environment_file\n    create_allure_environment()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def create_allure_environment():\n        sys_items = [f'os_info={platform.system()}, {platform.release()}', f'python_version={sys.version}']\n    \n        # создаем список из элементов в формате {key}={value}\n        items = [f'{key}={value}' for key, value in settings.model_dump().items()]\n        # собираем все элементы в единую строку с переносами\n        items.append(sys_items)\n>       properties = '\\n'.join(items)\nE       TypeError: sequence item 3: expected str instance, list found\n\ntools/allure/environment.py:15: TypeError"}, "steps": [{"name": "Get user me", "status": "passed", "steps": [{"name": "Make GET request to '/api/v1/users/me'", "status": "passed", "attachments": [{"name": "cURL command", "source": "88a2e874-4f11-48dc-92dc-2d9839b473ea-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "url", "value": "'/api/v1/users/me'"}, {"name": "params", "value": "None"}], "start": 1753443128251, "stop": 1753443128256}], "start": 1753443128251, "stop": 1753443128256}, {"name": "Check that response status code equals to <HTTPStatus.OK: 200>", "status": "passed", "parameters": [{"name": "actual", "value": "200"}, {"name": "expected", "value": "<HTTPStatus.OK: 200>"}], "start": 1753443128256, "stop": 1753443128256}, {"name": "Check get user response", "status": "passed", "steps": [{"name": "Check user", "status": "passed", "steps": [{"name": "Check that 'id' equals to '78276186-4d30-494b-89c9-cb40199020cd'", "status": "passed", "parameters": [{"name": "actual", "value": "'78276186-4d30-494b-89c9-cb40199020cd'"}, {"name": "expected", "value": "'78276186-4d30-494b-89c9-cb40199020cd'"}, {"name": "name", "value": "'id'"}], "start": 1753443128256, "stop": 1753443128258}, {"name": "Check that 'email' equals to 'peggy79@example.com'", "status": "passed", "parameters": [{"name": "actual", "value": "'peggy79@example.com'"}, {"name": "expected", "value": "'peggy79@example.com'"}, {"name": "name", "value": "'email'"}], "start": 1753443128258, "stop": 1753443128258}, {"name": "Check that 'last_name' equals to 'Rivera'", "status": "passed", "parameters": [{"name": "actual", "value": "'Rivera'"}, {"name": "expected", "value": "'Rivera'"}, {"name": "name", "value": "'last_name'"}], "start": 1753443128258, "stop": 1753443128258}, {"name": "Check that 'first_name' equals to 'Jessica'", "status": "passed", "parameters": [{"name": "actual", "value": "'Jessica'"}, {"name": "expected", "value": "'Jessica'"}, {"name": "name", "value": "'first_name'"}], "start": 1753443128258, "stop": 1753443128258}, {"name": "Check that 'middle_name' equals to 'Anthony'", "status": "passed", "parameters": [{"name": "actual", "value": "'Anthony'"}, {"name": "expected", "value": "'Anthony'"}, {"name": "name", "value": "'middle_name'"}], "start": 1753443128258, "stop": 1753443128258}], "parameters": [{"name": "actual", "value": "UserSchema(id='78276186-4d30-494b-89c9-cb40199020cd', email='peggy79@example.com', last_name='Rivera', first_name='Jessica', middle_name='Anthony')"}, {"name": "expected", "value": "UserSchema(id='78276186-4d30-494b-89c9-cb40199020cd', email='peggy79@example.com', last_name='Rivera', first_name='Jessica', middle_name='Anthony')"}], "start": 1753443128256, "stop": 1753443128258}], "parameters": [{"name": "get_user_response", "value": "GetUserResponseSchema(user=UserSchema(id='78276186-4d30-494b-89c9-cb40199020cd', email='peggy79@example.com', last_name='Rivera', first_name='Jessica', middle_name='Anthony'))"}, {"name": "create_user_response", "value": "CreateUserResponseSchema(user=UserSchema(id='78276186-4d30-494b-89c9-cb40199020cd', email='peggy79@example.com', last_name='Rivera', first_name='Jessica', middle_name='Anthony'))"}], "start": 1753443128256, "stop": 1753443128258}, {"name": "Validate JSON schema", "status": "passed", "parameters": [{"name": "instance", "value": "{'user': {'id': '78276186-4d30-494b-89c9-cb40199020cd', 'email': 'peggy79@example.com', 'lastName': 'Rivera', 'firstName': 'Jessica', 'middleName': 'Anthony'}}"}, {"name": "schema", "value": "{'$defs': {'UserSchema': {'description': 'описание структуры пользователя', 'properties': {'id': {'title': 'Id', 'type': 'string'}, 'email': {'format': 'email', 'title': 'Email', 'type': 'string'}, 'lastName': {'title': 'Lastname', 'type': 'string'}, 'firstName': {'title': 'Firstname', 'type': 'string'}, 'middleName': {'title': 'Middlename', 'type': 'string'}}, 'required': ['id', 'email', 'lastName', 'firstName', 'middleName'], 'title': 'UserSchema', 'type': 'object'}}, 'properties': {'user': {'$ref': '#/$defs/UserSchema'}}, 'required': ['user'], 'title': 'GetUserResponseSchema', 'type': 'object'}"}], "start": 1753443128258, "stop": 1753443128259}], "attachments": [{"name": "log", "source": "d7a8d6aa-defe-431d-b754-1a91e4ceed8f-attachment.txt", "type": "text/plain"}], "start": 1753443128251, "stop": 1753443128259, "uuid": "62bd523d-7081-4c42-89f1-e39030aeeb1f", "historyId": "31d6e52c7bb261f1e5403958c6bdb3c2", "testCaseId": "31d6e52c7bb261f1e5403958c6bdb3c2", "fullName": "tests.users.test_users.TestUsers#test_get_user_me", "labels": [{"name": "tag", "value": "USERS"}, {"name": "epic", "value": "LMS service"}, {"name": "suite", "value": "Users"}, {"name": "feature", "value": "Users"}, {"name": "tag", "value": "GET_ENTITY"}, {"name": "parentSuite", "value": "LMS service"}, {"name": "severity", "value": "critical"}, {"name": "subSuite", "value": "Get entity"}, {"name": "tag", "value": "REGRESSION"}, {"name": "story", "value": "Get entity"}, {"name": "tag", "value": "users"}, {"name": "tag", "value": "regression"}, {"name": "host", "value": "MacBook-Air-Rik.local"}, {"name": "thread", "value": "17755-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.users.test_users"}]}